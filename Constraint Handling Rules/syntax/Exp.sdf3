module Exp

imports

	Common

context-free start-symbols

	Exp
	ExpBool

context-free syntax

	Exp.Int    = INT
	Exp.String = STRING
	Exp.Id     = ID

	Exp.Plus   = Exp "+" Exp {left}
	Exp.Minus  = Exp "-" Exp {left}
	Exp.Mult   = Exp "*" Exp
	Exp.Divide = Exp "/" Exp
	Exp.Mod    = Exp "%" Exp

	Exp        = <(<Exp>)> {bracket}

	ExpBool.True     = <true>
	ExpBool.False    = <false>

	ExpBool.Eq       = Exp "==" Exp
	ExpBool.TripleEq = Exp "===" Exp
	ExpBool.NEq      = Exp "!=" Exp
	ExpBool.Lt       = Exp "<" Exp
	ExpBool.Gt       = Exp ">" Exp
	ExpBool.LtE      = Exp "<=" Exp
	ExpBool.GtE      = Exp ">=" Exp

	ExpBool.And      = ExpBool "&&" ExpBool
	ExpBool.Or       = ExpBool "||" ExpBool
	ExpBool.Not      = "!" ExpBool

	ExpBool          = <(<ExpBool>)> {bracket}

context-free priorities

	{left: Exp.Mult Exp.Mod}                                                          >
	{left: Exp.Plus Exp.Minus}                                                        >
	{non-assoc: ExpBool.Eq ExpBool.NEq ExpBool.Lt ExpBool.Gt ExpBool.LtE ExpBool.GtE} >
	{left: ExpBool.Not}                                                               >
	{left: ExpBool.And}                                                               >
	{left: ExpBool.Or}